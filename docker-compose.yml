version: '3.8'

services:
  # MongoDB  ===============>
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # Redis  ===============>
  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - app-network

  # Zookeeper  ===============>
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-network

  # Kafka Broker   ===============>
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9093:9093" 
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper
    networks:
      - app-network

  # NestJS Backend ===============>
  backend:
    build:
      context: ./titans-backend
      dockerfile: Dockerfile
    container_name: nestjs_backend
    ports:
      - "3000:3000"
    environment:
      - MONGODB_URI=mongodb://root:root@mongo:27017/regex-validator?authSource=admin
      - REDIS_HOST=redis
      - KAFKA_BROKER=kafka:9093
      - PROCESS_DELAY_MS=2000
      - REGEX_PATTERN=^[a-zA-Z0-9]+$
    depends_on:
      - mongo
      - redis
      - kafka
    networks:
      - app-network

  # React Frontend ===============>
  frontend:
    build:
      context: ./titans-frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    ports:
      - "61234:80"  
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  mongo-data:

networks:
  app-network:
    driver: bridge
